version: "3"


#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing

################################################################################################


tasks:

  run:
    aliases: [ 'r' ]
    cmds:
      - poetry run python src/manage.py runserver

  exec:
    aliases: [ 'e' ]
    cmds:
      - poetry run python src/manage.py {{.CLI_ARGS}}


  init:
    cmds:
      - poetry run python src/manage.py makemigrations
      - poetry run python src/manage.py migrate

  init:user:
    cmds:
      - poetry run python src/manage.py createsuperuser # admin/admin


  run02:
    cmds:
      - mkdir dist/
      - |
        poetry run python \
            src/try_selenium/run02.py
    ignore_error: true

  help:
    cmds:
      - poetry run python -m selenium --help

  poetry:
    aliases: [ 'p', 'pm' ]
    cmds:
      - poetry {{.CLI_ARGS}} # install, update

  install:
    aliases: [ 'i' ]
    cmds:
      - poetry install

  add:
    aliases: [ 'a' ]
    cmds:
      - poetry add {{.CLI_ARGS}} # --dev

  add:all:
    cmds:
      - poetry add "typer[all]" selenium

  new:project:
    aliases: [ 'np' ]
    cmds:
      - poetry run django-admin startproject {{.CLI_ARGS}}
#    dir: "src/try_django"

  new:app:
    aliases: [ 'na' ]
    cmds:
      - echo $(pwd)
      - poetry run django-admin startapp {{.CLI_ARGS}}
#      - poetry run python manage.py startapp {{.CLI_ARGS}}
    dir: "src/modules"
    ignore_error: true
