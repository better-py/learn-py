version: "3"

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing

################################################################################################

tasks:
  run:
    cmds:
      #      - source $(poetry env info --path)/bin/activate
      - |
        python src/try_typer/main.py  --help
      - |
        python src/try_typer/main.py  Bob
  #      - deactivate



  ################################################################################################

  debug:
    cmds:
      #      - poetry shell -vvv
      - poetry debug info
      - poetry env list

  env:fix:
    cmds:
      #      - rm -rf ~/Library/Caches/pypoetry  # 也不要乱删此路径
      - poetry env list
      - poetry env remove --all
      - poetry config virtualenvs.path --unset  # 不要改此参数

  env:init:
    cmds:
      - pyenv which python3
      - poetry env use $(pyenv which python3)
      - task: debug
      #      - poetry env use $(pyenv which python3)
      #      - poetry env use /Users/dev/.pyenv/versions/py310-exe/bin/python3
    #      - poetry env use 3.10
    ignore_error: true

  env:cfg:
    cmds:
      - poetry config virtualenvs.in-project false
      - poetry config virtualenvs.create false
      - poetry config virtualenvs.prefer-active-python true
      - poetry config virtualenvs.path .venv
      - poetry config --list

  install:
    cmds:
      #      - poetry config virtualenvs.in-project true
      #      - poetry config virtualenvs.create true
      #      - poetry config virtualenvs.prefer-active-python true
      #      - poetry config virtualenvs.path .venv
      - poetry install -vvv
    #      - poetry run pip3 uninstall numpy
    #      - poetry run pip3 install numpy
    ignore_error: true

  add:
    cmds:
      #- poetry remove nicegui
      - |
        poetry add "typer[all]"

  add:dev:
    cmds:
      - |
        poetry add --dev \
          black pytest \
          pyinstaller

  update:
    cmds:
      - poetry update

  config:
    cmds:
      - poetry config virtualenvs.in-project false --local
      - poetry config virtualenvs.create false --local

  env:
    cmds:
      - poetry
      - poetry env list
      - poetry cache list
      - poetry debug info
      - poetry debug resolve
